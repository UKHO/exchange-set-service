name: $(BuildDefinitionName)_$(SourceBranchName)_$(Date:yy)$(DayOfYear).$(BuildCounter)

parameters:
  - name: ContinueEvenIfResourcesAreGettingDestroyed
    displayName: "Continue even if resources are getting destroyed"
    type: boolean
    default: false

trigger:
  - main
  - release/*
  - develop

schedules:
- cron: "0 4 * * 1"
  displayName: "Weekly NVD Check Build"
  branches:
    include:
    - main
  always: true

pool: 
    name: NautilusBuild
    demands: vs_16 -equals 1 #exclude agents 13 and 14 as code coverage report fails

variables:
  - name: BuildConfiguration
    value: "release"
  - name: BuildPlatform
    value: "any cpu"
  - name: BuildCounter
    value: $[counter(format('{0:yyyyMMdd}', pipeline.startTime), 1)]
  - name: UKHOAssemblyCompany
    value: "UK Hydrographic Office"
  - name: UKHOAssemblyVersionPrefix
    value: "1.0."
  - name: UKHOAssemblyProduct
    value: "Exchange Set Service"
  - name: UKHOAssemblyCopyright
    value: "Copyright Â© UK Hydrographic Office"
  - name: Container
    value: "ukhydrographicoffice/terraform-azure-powershell-unzip:1.7.2"
  - name: DeploymentPool
    value: "UKHO Ubuntu 1804"
  - name: SdkVersion
    value: "6.0.x"
  - name: WindowPool
    value: "NautilusBuild"

stages:
  - stage: PERFORM_DEPENDENCYCHECK_DOTNETBUILD_DOTNETTEST_AND_PUBLISH
    displayName: "Build (inc DependencyChecker, Dotnet Build , dotnet test and publish artifact )"
    dependsOn: []
    jobs:
      - job: PublishFunctionalTestsAndTerraform
        workspace:
          clean: all
        displayName: "Publish Functional Tests And Terraform"
        steps:
          - task: CopyFiles@2
            displayName: Copy EssFulfilment Config
            inputs:
              SourceFolder: '$(Build.SourcesDirectory)\UKHO.ExchangeSetService.API\UKHO.ExchangeSetService.API\'
              Contents: 'appsettings.json'
              TargetFolder: '$(Build.SourcesDirectory)\Deployment\src'

          - task: CopyFiles@2
            displayName: "Copy OpenAPI spec for deployment"
            inputs:
              SourceFolder: '$(Build.SourcesDirectory)'
              Contents: 'exchangeSetService_OpenApi_definition.yaml'
              TargetFolder: '$(Build.SourcesDirectory)\Deployment\src\Modules\APIM' 

          - task: PublishBuildArtifacts@1
            displayName: "Publish terraform Artifacts"
            inputs:
              PathtoPublish: '$(Build.SourcesDirectory)\Deployment'
              ArtifactName: terraformartifact

  - stage: QAdeploy
    dependsOn:
    #- Devdeploy
    - PERFORM_DEPENDENCYCHECK_DOTNETBUILD_DOTNETTEST_AND_PUBLISH
    displayName: QAdeploy (inc terraform, webapp deploy)
    #condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/main'),startsWith(variables['Build.SourceBranch'], 'refs/heads/release/')))
    jobs:
      - deployment: QADeployApp2
        displayName: "QA - deploy terraform and dotnet App for FSS UI"
        environment: "Ess-Qa"
        pool: $(DeploymentPool)
        container: ${{variables.Container}}
        workspace:
          clean: all
        variables:
          - group: "ESS-Deployment-Variables-QA"
          - group: "ESS-QA2-Variables"
          - name: "ESSAzureADConfiguration.ClientId"
            value: $(ESSClientId)
          - name: "ESSAzureADConfiguration.TenantId"
            value: $(TenantId)
          - name: "EssAuthorizationConfiguration.TenantId"
            value: $(TenantId)
          - name: "EssAuthorizationConfiguration.AutoTestClientId"
            value: $(AutoTestClientId_Authed)
          - name: "EssAuthorizationConfiguration.AutoTestClientSecret"
            value: $(AutoTestClientSecret_Authed)
          - name: "EssAuthorizationConfiguration.EssClientId"
            value: $(ESSClientId)
          - name: "EssAuthorizationConfiguration.AutoTestClientIdNoAuth"
            value: $(AutoTestClientId_NoAuth)
          - name: "EssAuthorizationConfiguration.AutoTestClientSecretNoAuth"
            value: $(AutoTestClientSecret_NoAuth)
          - name: "AzureAdB2CTestConfiguration.ClientSecret"
            value: $(AUTOTEST-ESS-SECRET)
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                  submodules: recursive

                - template: Deployment/templates/continuous-deployment-apim-v2.yml
                  parameters:
                     ContinueEvenIfResourcesAreGettingDestroyed: ${{ parameters.ContinueEvenIfResourcesAreGettingDestroyed }}
                     AzureSubscription: "Fleet Manager Dev/Test"
                     TerraformKeyVault: $(APIM_TERRAFORM_KEYVAULT)
                     APIMResourceGroup: $(APIM_RESOURCE_GROUP_NAME)
                     APIMServiceInstance: $(APIM_SERVICE_NAME)
                     tfstateStorageAccountRG: $(APIM_TFSTATE_STORAGE_ACCOUNT_RG)
                     tfstateStorageAccountName: $(APIM_TFSTATE_STORAGE_ACCOUNT_NAME)
